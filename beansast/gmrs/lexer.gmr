IF ::= if\b
ELSE ::= else\b
ELIF ::= elif\b
WHILE ::= while\b
FOR ::= for\b
FUNCTION ::= function\b
CLASS ::= class\b
METHOD ::= method\b
MODULE ::= module\b
FROM ::= from\b
IMPORT ::= import\b
DATA ::= data\b
SPACENAME ::= spacename\b
PACKAGE ::= package\b
PUBLIC ::= public\b
PRIVATE ::= private\b
RETURN ::= return\b

EOF ::= \Z
STRING ::= ("|')(?P<value>(((?!(\\|\1)).)|(\\(?!\\).)|(\\\\))*)\1
FLOAT ::= (?P<value>(\d*\.\d+)|(\d+\.\d*))
INT ::= (?P<value>\d+)
ignore SPACE ::= [\t ]+
ignore EOL ::= \n
ignore COMMENT ::= #[^\n]*
TRUE ::= true
FALSE ::= false

DOT ::= [.]

LPAR ::= \(
RPAR ::= \)
LBRACE ::= {
RBRACE ::= }
LBRACKET ::= \[
RBRACKET ::= ]
LBRACEU ::= {\|
RBRACEU ::= \|}
LBRACKETU ::= \[\|
RBRACKETU ::= \|]

HAS ::= has\b
IN ::= in\b
IS ::= is\b

AND ::= and\b
OR ::= or\b
XOR ::= xor\b
NOT ::= not\b

RSHIFT ::= >>
LSHIFT ::= <<
DPLUS ::= \+\+
PLUS ::= \+
DMINUS ::= --
MINUS ::= -
SQRT ::= \*/
LOG ::= /\*
DASTERISK ::= \*\*
ASTERISK ::= \*
DSLASH ::= //
SLASH ::= /
PERCENTAGE ::= %
LINE ::= \|
AMPERSAND ::= &
TILDE ::= ~
CIRCUMFLEX ::= \^

EQ ::= ==
GE ::= >=
LE ::= <=
GT ::= >
LT ::= <
NE ::= !=

EQUALS ::= =

COLON ::= :
GRAVE ::= `
DGRAVE ::= ``
SEMICOLON ::= ;
COMMA ::= ,
TILDE ::= ~
EXCLAMATION ::= !
QUESTION ::= \?

ID ::= (?P<name>\w*[a-zA-Z_]\w*)
