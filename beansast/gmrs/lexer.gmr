IF ::= if(?![a-zA-Z_])
ELSE ::= else(?![a-zA-Z_])
ELIF ::= elif(?![a-zA-Z_])
WHILE ::= while(?![a-zA-Z_])
FOR ::= for(?![a-zA-Z_])
FUNCTION ::= function(?![a-zA-Z_])
CLASS ::= class(?![a-zA-Z_])
METHOD ::= method(?![a-zA-Z_])
MODULE ::= module(?![a-zA-Z_])
FROM ::= from(?![a-zA-Z_])
IMPORT ::= import(?![a-zA-Z_])
DATA ::= data(?![a-zA-Z_])
SPACENAME ::= spacename(?![a-zA-Z_])
PACKAGE ::= package(?![a-zA-Z_])
PUBLIC ::= public(?![a-zA-Z_])
PRIVATE ::= private(?![a-zA-Z_])
RETURN ::= return(?![a-zA-Z_])

EOF ::= \Z
STRING ::= ("|')(?P<value>(((?!(\\|\1)).)|(\\(?!\\).)|(\\\\))*)\1
FLOAT ::= (?P<value>(\d*\.\d+)|(\d+\.\d*))
INT ::= (?P<value>\d+)
ignore SPACE ::= [\t ]+
ignore EOL ::= \n
ignore COMMENT ::= #[^\n]*
TRUE ::= true
FALSE ::= false

DOT ::= [.]

LPAR ::= \(
RPAR ::= \)
LBRACE ::= {
RBRACE ::= }
LBRACKET ::= \[
RBRACKET ::= ]
LBRACEU ::= {\|
RBRACEU ::= \|}
LBRACKETU ::= \[\|
RBRACKETU ::= \|]

HAS ::= has(?![a-zA-Z_])
IN ::= in(?![a-zA-Z_])
IS ::= is(?![a-zA-Z_])

AND ::= and(?![a-zA-Z_])
OR ::= or(?![a-zA-Z_])
XOR ::= xor(?![a-zA-Z_])
NOT ::= not(?![a-zA-Z_])

RSHIFT ::= >>
LSHIFT ::= <<
DPLUS ::= \+\+
PLUS ::= \+
DMINUS ::= --
MINUS ::= -
SQRT ::= \*/
LOG ::= /\*
DASTERISK ::= \*\*
ASTERISK ::= \*
DSLASH ::= //
SLASH ::= /
PERCENTAGE ::= %
LINE ::= \|
AMPERSAND ::= &
TILDE ::= ~
CIRCUMFLEX ::= \^

EQ ::= ==
GE ::= >=
LE ::= <=
GT ::= >
LT ::= <
NE ::= !=

EQUALS ::= =

COLON ::= :
GRAVE ::= `
DGRAVE ::= ``
SEMICOLON ::= ;
COMMA ::= ,
TILDE ::= ~
EXCLAMATION ::= !
QUESTION ::= \?

ID ::= (?P<name>\w*[a-zA-Z_]\w*)
